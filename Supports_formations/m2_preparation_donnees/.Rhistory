filter (row_number()==1) %>% #on garde n=1 : donn?e France
mutate (annee='2005') %>%
select (-one_of ("2005"))
library (assertr)
# essai hors fonction
sortie_2005 <- read_excel(fichier) %>%
mutate (vrac = col_concat()) %>%
filter (row_number()==1) %>% #on garde n=1 : donn?e France
mutate (annee='2005') %>%
select (-one_of ("2005"))
sortie_2005 <- read_excel (fichier)
col_concat(sortie_2005)
# essai hors fonction
sortie_2005 <- read_excel (fichier) %>%
assert_rows(col_concat) %>%
filter (row_number()==1) %>% #on garde n=1 : donn?e France
mutate (annee='2005') %>%
select (-one_of ("2005"))
# essai hors fonction
sortie_2005 <- read_excel (fichier)
sortie_2005$vrac <- col_concat (sortie_2005)
View(sortie_2005)
sortie_2005 %>%
filter(str_detect (vrac, 'France')) %>% #on garde n=1 : donn?e France
mutate (annee='2005') %>%
select (-one_of ("2005"))
sortie_2005 <- sortie_2005 %>%
filter(str_detect (vrac, 'France')) %>% #on garde n=1 : donn?e France
mutate (annee='2005') %>%
select (-one_of ("2005"))
View(sortie_2005)
View(sortie_2005)
sortie_2005 <- sortie_2005 %>%
filter(str_detect (vrac, 'France'), !str_detect (vrac, 'Ile-')) %>% #on garde n=1 : donn?e France
mutate (annee='2005') %>%
select (-one_of ("2005"))
sortie_2005 <- read_excel (fichier)
sortie_2005$vrac <- col_concat (sortie_2005)
sortie_2005 <- sortie_2005 %>%
filter(str_detect (vrac, 'France'), !str_detect (vrac, 'Ile-'))
View(sortie_2005)
# essai hors fonction
sortie_2005 <- read_excel (fichier)
sortie_2005$vrac <- col_concat (sortie_2005)
sortie_2005 <- sortie_2005 %>%
filter(str_detect (vrac, 'France'), !str_detect (vrac, 'Ile-')) %>% #on garde n=1 : donn?e France
mutate (annee='2005')
View(sortie_2005)
sortie_2005 <- sortie_2005 %>%
filter(str_detect (vrac, 'France'), !str_detect (vrac, 'Ile-')) %>% #on garde n=1 : donn?e France
mutate (annee='2005') %>%
select (-one_of ('2005'))
View(sortie_2005)
sortie <- read_excel (path = entree) %>%
filter (row_number () == 1) %>% #on garde n=1 : donn?e France
mutate (annee = an) %>%
select (-one_of (an), -vrac)
sortie_2005 <- sortie_2005 %>%
filter(str_detect (vrac, 'France'), !str_detect (vrac, 'Ile-')) %>% #on garde n=1 : donn?e France
mutate (annee='2005') %>%
select (-one_of ('2005'), -vrac)
# essai hors fonction
sortie_2005 <- read_excel (fichier)
sortie_2005$vrac <- col_concat (sortie_2005)
sortie_2005 <- sortie_2005 %>%
filter(str_detect (vrac, 'France'), !str_detect (vrac, 'Ile-')) %>% #on garde n=1 : donn?e France
mutate (annee='2005') %>%
select (-one_of ('2005')
sortie_2005 <- read_excel (fichier)
sortie_2005$vrac <- col_concat (sortie_2005)
sortie_2005 <- sortie_2005 %>%
filter(str_detect (vrac, 'France'), !str_detect (vrac, 'Ile-')) %>% #on garde n=1 : donn?e France
mutate (annee='2005') %>%
select (-one_of ('2005'))
sortie_2005 <- sortie_2005 %>%
filter(str_detect (vrac, 'France'), !str_detect (vrac, 'Ile-')) %>% #on garde n=1 : donn?e France
mutate (annee='2005') %>%
select (-one_of ('2005'), -vrac)
sortie_2005 <- read_excel (fichier)
sortie_2005$vrac <- col_concat (sortie_2005)
sortie_2005 <- sortie_2005 %>%
filter(str_detect (vrac, 'France'), !str_detect (vrac, 'Ile-')) %>% #on garde n=1 : donn?e France
mutate (annee='2005') %>%
select (-one_of ('2005')) %>%
select (-vrac)
import <- function(entree, an) {
sortie <- read_excel (path = entree) %>%
filter (row_number () == 1) %>% #on garde n=1 : donn?e France
mutate (annee = an) %>%
select (-one_of (an)) %>%
select (-vrac)
}
# essai de la fonction hors boucle
essai_2005 <- import (entree = fichier,
an = '2005')
import <- function(entree, an) {
sortie <- read_excel (path = entree)
sortie$vrac <- col_concat (sortie)
sortie <- sortie %>%
filter (row_number () == 1) %>% #on garde n=1 : donn?e France
mutate (annee = an) %>%
select (-one_of (an)) %>%
select (-vrac)
}
# essai de la fonction hors boucle
essai_2005 <- import (entree = fichier,
an = '2005')
rm (list = ls())
fichier <- paste0("U:/cscribe/sources/ademe/collecte/hors_deblais/type_collecte/porte_a_porte_",2005,".xlsx")
# essai hors fonction
sortie_2005 <- read_excel (fichier)
sortie_2005$vrac <- col_concat (sortie_2005)
sortie_2005 <- sortie_2005 %>%
filter(str_detect (vrac, 'France'), !str_detect (vrac, 'Ile-')) %>% #on garde n=1 : donn?e France
mutate (annee='2005') %>%
select (-one_of ('2005')) %>%
select (-vrac)
import <- function(entree, an) {
sortie <- read_excel (path = entree)
sortie$vrac <- col_concat (sortie)
sortie <- sortie %>%
filter (row_number () == 1) %>% #on garde n=1 : donn?e France
mutate (annee = an) %>%
select (-one_of (an)) %>%
select (-vrac)
}
# essai de la fonction hors boucle
essai_2005 <- import (entree = fichier,
an = '2005')
# dans la boucle
for (i in as.character (seq (from = 2005, to = 2011, by = 2))) {
nom <- paste0 ("porte_a_porte_", i)
entree = paste0 ("U:/cscribe/sources/ademe/collecte/hors_deblais/type_collecte/porte_a_porte_",i,".xlsx")
assign(nom, import (entree = entree, an = i))
}
View(porte_a_porte_2005)
#rapportage annuel déchets municipaux
rm (list = ls())
library ("tidyverse")
library ("readxl")
library (assertr)
fichier <- paste0("U:/cscribe/sources/ademe/collecte/hors_deblais/type_collecte/porte_a_porte_",2005,".xlsx")
# essai hors fonction
sortie_2005 <- read_excel (fichier)
sortie_2005$vrac <- col_concat (sortie_2005)
sortie_2005 <- sortie_2005 %>%
filter(str_detect (vrac, 'France'), !str_detect (vrac, 'Ile-')) %>% #on garde n=1 : donn?e France
mutate (annee='2005') %>%
select (-one_of ('2005')) %>%
select (-vrac)
import <- function(entree, an) {
sortie <- read_excel (path = entree)
sortie$vrac <- col_concat (sortie)
sortie <- sortie %>%
filter (row_number () == 1) %>% #on garde n=1 : donn?e France
mutate (annee = an) %>%
select (-one_of (an)) %>%
select (-vrac)
}
# essai de la fonction hors boucle
essai_2005 <- import (entree = fichier,
an = '2005')
# dans la boucle
for (i in as.character (seq (from = 2005, to = 2011, by = 2))) {
nom <- paste0 ("porte_a_porte_", i)
entree = paste0 ("U:/cscribe/sources/ademe/collecte/hors_deblais/type_collecte/porte_a_porte_",i,".xlsx")
assign(nom, import (entree = entree, an = i))
}
rm (list = ls())
library ("tidyverse")
library ("readxl")
library (assertr)
fichier <- paste0("U:/cscribe/sources/ademe/collecte/hors_deblais/type_collecte/porte_a_porte_",2005,".xlsx")
# essai hors fonction
sortie_2005 <- read_excel (fichier)
sortie_2005$vrac <- col_concat (sortie_2005)
sortie_2005 <- sortie_2005 %>%
filter(str_detect (vrac, 'France'), !str_detect (vrac, 'Ile-')) %>% #on garde n=1 : donn?e France
mutate (annee='2005') %>%
select (-one_of ('2005')) %>%
select (-vrac)
import <- function(entree, an) {
sortie <- read_excel (path = entree)
sortie$vrac <- col_concat (sortie)
sortie <- sortie %>%
filter (row_number () == 1) %>% #on garde n=1 : donn?e France
mutate (annee = an) %>%
select (-one_of (an)) %>%
select (-vrac)
}
# essai de la fonction hors boucle
essai_2005 <- import (entree = fichier,
an = '2005')
# dans la boucle
for (i in as.character (seq (from = 2005, to = 2011, by = 2))) {
nom <- paste0 ("porte_a_porte_", i)
entree = paste0 ("U:/cscribe/sources/ademe/collecte/hors_deblais/type_collecte/porte_a_porte_",i,".xlsx")
assign(nom, import (entree = entree, an = i))
}
?unzip
?download.file
?arrange
library (dplyr)
library (tidyr)
library (forcats)
library (lubridate)
library (stringr)
library (RcppRoll)
library (DT)
library (readxl)
library (dbplyr)
library (RPostgreSQL)
library (rsdmx)
library (sf)
?arrange
?arrange
x <- 1:10
x <- sample (1:10)
x <- sample (1:10)
lagx <- lag(x)
leadx <- lead(x)
lag2x <- lag(x,2)
lead2x <- lead(x,2)
cbind (x = x, lagx = lagx, lag2x = lag2x, leadx = leadx, lead2x = lead2x)
x <- sample (1:10)
lagx <- lag(x)
leadx <- lead(x)
lag2x <- lag(x,2)
lead2x <- lead(x,2)
cbind (x = x, lagx = lagx, lag2x = lag2x, leadx = leadx, lead2x = lead2x)
x <- sample (1:10)
lagx <- lag(x)
leadx <- lead(x)
lag2x <- lag(x,2)
lead2x <- lead(x,2)
cbind (x = x, lagx = lagx, lag2x = lag2x, leadx = leadx, lead2x = lead2x)
?sample
x <- sample (1:10)
cumsumx <- cumsum (x)
rollsumx <- roll_sum (x, 2)
rollsumx
cbind (x = x, cumsumx = cumsum (x), rollsumx = rollsumx, rollsumrx = roll_sumr (x, 2))
?roll_sum
x <- sample (1:10)
cumsumx <- cumsum (x)
rollsumx <- roll_sum (x, 3)
rollsumx
cbind (x = x, cumsumx = cumsum (x), rollsumx = rollsumx, rollsumrx = roll_sumr (x, 2))
x <- sample (1:10)
cumsumx <- cumsum (x)
rollsumx <- roll_sum (x, 3)
rollsumx
cbind (x = x, cumsumx = cumsum (x), rollsumx = rollsumx, rollsumrx = roll_sumr (x, 3))
x <- sample (1:10)
cumsumx <- cumsum (x)
rollsumx <- roll_sum (x, n=2)
rollsumx
cbind (x = x, cumsumx = cumsum (x), rollsumx = rollsumx, rollsumrx = roll_sumr (x, n=2))
x <- sample (1:10)
cumsumx <- cumsum (x)
rollsumx <- roll_sum (x, n=3)
rollsumx
cbind (x = x, cumsumx = cumsum (x), rollsumx = rollsumx, rollsumrx = roll_sumr (x, n=3))
x <- sample (1:10)
cumsumx <- cumsum (x)
rollsumx <- roll_sum (x, n=3)
rollsumx
cbind (x = x, cumsumx = cumsum (x), rollsumx = rollsumx, rollsumrx = roll_sumr (x, n=3, by=2))
?str_sub
x <- c ("abcdefg", "hijklmnop")
str_sub (x, start = 3, end = 4)
str_sub (x, start = 3, end = -2)
?lag
x <- sample (1:10)
lagx <- lag (x)
leadx <- lead (x)
lag2x <- lag (x, n = 2)
lead2x <- lead (x, n = 2)
cbind (x = x, lagx = lagx, lag2x = lag2x, leadx = leadx, lead2x = lead2x)
load("C:/Users/pirz/GitHub/parcours-r/m2_preparation_donnees/V2.2/Préparer ses données avec R et le Tidyverse/data/FormationPreparationDesDonnées.RData")
analyseb <- mutate (analyse, classe_resultat_analyse = case_when (
resultat_analyse == 0  ~ "1",
resultat_analyse <= 0.001  ~ "2",
resultat_analyse <= 0.01  ~ "3",
resultat_analyse <= 0.1  ~ "4",
resultat_analyse > 0.1  ~ "5",
TRUE ~ ""
))
View(analyseb)
View(exercice)
load("C:/Users/pirz/GitHub/parcours-r/m2_preparation_donnees/V2.2/Préparer ses données avec R et le Tidyverse/data/majic.RData")
rm (list = ls ())
load("C:/Users/pirz/GitHub/parcours-r/m2_preparation_donnees/V2.2/Préparer ses données avec R et le Tidyverse/data/majic.RData")
rm (list = ls ())
load("C:/Users/pirz/GitHub/parcours-r/m2_preparation_donnees/V2.2/Préparer ses données avec R et le Tidyverse/data/FormationPreparationDesDonnées.RData")
View(analyse)
View(exercice)
View(station_ars)
load("C:/Users/pirz/GitHub/parcours-r/m2_preparation_donnees/V2.2/Préparer ses données avec R et le Tidyverse/data/majic.RData")
rm (list = ls ())
?str_trim
txt <- c ("arm","fot", "foot","lefroot", "footbart")
grep ("^f[[:alpha:]]*t$", txt) ## Result: 2, 3, 5
txt <- c ("arm","fot", "foot","lefroot", "footbart")
grep ("^f", txt)
txt <- c ("arm","fot", "foot","lefroot", "footbart")
grep ("t$", txt)
str_detect ("^f", txt) # les éléments qui commencent pas la lettre f
txt
?str_detect
str_detect (string = txt, pattern = "^f") # les éléments qui commencent pas la lettre f
txt <- c ("arm","fot", "foot","lefroot", "footbart")
str_detect (string = txt, pattern = "^f") # les éléments qui commencent pas la lettre f
str_extract (string = txt, pattern = "t$") # les éléments qui terminent pat la lettre t
txt <- c ("arm","fot", "foot","lefroot", "footbart")
str_detect (string = txt, pattern = "^f") # les éléments qui commencent pas la lettre f
str_extract_all (string = txt, pattern = "t$") # les éléments qui terminent pat la lettre t
txt <- c ("arm","fot", "foot","lefroot", "footbart")
str_detect (string = txt, pattern = "^f") # les éléments qui commencent pas la lettre f
str_locate (string = txt, pattern = "t$") # les éléments qui terminent pat la lettre t
txt <- c ("arm","fot", "foot","lefroot", "footbart")
str_detect (string = txt, pattern = "^f") # les éléments qui commencent pas la lettre f
str_detect (string = txt, pattern = "t$") # les éléments qui terminent pat la lettre t
txt[str_detect (string = txt, pattern = "^f")]
txt [str_detect (string = txt, pattern = "t$")]
txt <- c ("voiture","voilier", "bus", "avion", "train", "tram", "trotinette")
str_detect (string = txt, pattern = "^vo") # les éléments qui commencent pas la lettre f
txt [str_detect (string = txt, pattern = "^tro")]
str_detect (string = txt, pattern = "e$") # les éléments qui terminent pat la lettre t
txt [str_detect (string = txt, pattern = "e$")]
load (file = "data/FormationPreparationDesDonnées.RData")
getwd()
setwd ('C:/Users/pirz/GitHub/parcours-r/m2_preparation_donnees/V2.2/Préparer ses données avec R et le Tidyverse')
load (file = "data/FormationPreparationDesDonnées.RData")
ars <- filter (prelevement, code_reseau == "ARS")
View(prelevement)
stations_de_la_table_prelevement <- unique (pull (prelevement, code_station))
stations_de_la_table_prelevement <- pull (prelevement, code_station)
load("C:/Users/pirz/GitHub/parcours-r/m2_preparation_donnees/V2.2/Préparer ses données avec R et le Tidyverse/data/pesticides.RData")
rm (list=ls())
load("C:/Users/pirz/GitHub/parcours-r/m2_preparation_donnees/V2.2/Préparer ses données avec R et le Tidyverse/data/pesticides.RData")
library (magrittr)
library (dplyr)
library (lubridate)
rm (list = ls ())
load (file = "data/FormationPreparationDesDonnées.RData")
taux_de_quantification <- exercice %>%
mutate (year = year (date_prelevement),
num = 1 * (code_remarque == 1),
denom = 1 * (code_remarque %in% c (1,2,7,10))) %>%
group_by (year, code_parametre) %>%
summarise (taux_de_quantification = 100 * sum (num) / sum (denom))
station_avec_le_pire_cumul_en_2016 <- exercice %>%
filter (code_remarque == 1, year (date_prelevement) == 2016) %>%
group_by (libelle_station, code_station, code_prelevement) %>%
summarise (resultat_analyse = sum (resultat_analyse)) %>%
ungroup() %>%
filter (resultat_analyse == max (resultat_analyse))
View(taux_de_quantification)
View(station_avec_le_pire_cumul_en_2016)
rm (list = ls ()
library (magrittr)
library (dplyr)
library (lubridate)
rm (list = ls ())
load (file = "data/pesticides.RData")
taux_de_quantification <- exercice %>%
mutate (year = year (date_prelevement),
num = 1 * (code_remarque == 1),
denom = 1 * (code_remarque %in% c (1,2,7,10))) %>%
group_by (year, code_parametre) %>%
summarise (taux_de_quantification = 100 * sum (num) / sum (denom))
station_avec_le_pire_cumul_en_2016 <- exercice %>%
filter (code_remarque == 1, year (date_prelevement) == 2016) %>%
group_by (libelle_station, code_station, code_prelevement) %>%
summarise (resultat_analyse = sum (resultat_analyse)) %>%
ungroup() %>%
filter (resultat_analyse == max (resultat_analyse))
load (file = "data/FormationPreparationDesDonnées.RData")
s
rm (list = ls ()
load (file = "data/FormationPreparationDesDonnées.RData")
rm (list = ls ()
load (file = "data/FormationPreparationDesDonnées.RData")
rm (list = ls ())
load (file = "data/FormationPreparationDesDonnées.RData")
View(exercice)
rm (list = ls ())
library (magrittr)
library (dplyr)
library (lubridate)
rm (list = ls ())
load (file = "data/FormationPreparationDesDonnées.RData")
taux_de_quantification <- exercice %>%
mutate (year = year (date_prelevement),
num = 1 * (code_remarque == 1),
denom = 1 * (code_remarque %in% c (1,2,7,10))) %>%
group_by (year, code_parametre) %>%
summarise (taux_de_quantification = 100 * sum (num) / sum (denom))
station_avec_le_pire_cumul_en_2016 <- exercice %>%
filter (code_remarque == 1, year (date_prelevement) == 2016) %>%
group_by (libelle_station, code_station, code_prelevement) %>%
summarise (resultat_analyse = sum (resultat_analyse)) %>%
ungroup() %>%
filter (resultat_analyse == max (resultat_analyse))
View(station_avec_le_pire_cumul_en_2016)
station_avec_le_pire_cumul_en_2016 <- exercice %>%
filter (code_remarque == 1, year (date_prelevement) == 2016) %>%
group_by (libelle_station, code_station, code_prelevement) %>%
summarise (resultat_analyse = sum (resultat_analyse)) %>%
group_by (libelle_station) %>%
filter (resultat_analyse == max (resultat_analyse))
View(station_avec_le_pire_cumul_en_2016)
rm (list = ls ())
library (magrittr)
library (dplyr)
library (lubridate)
rm (list = ls ())
load (file = "data/FormationPreparationDesDonnées.RData")
taux_de_quantification <- exercice %>%
mutate (year = year (date_prelevement),
num = 1 * (code_remarque == 1),
denom = 1 * (code_remarque %in% c (1,2,7,10))) %>%
group_by (year, code_parametre) %>%
summarise (taux_de_quantification = 100 * sum (num) / sum (denom))
pire_echantillon_par_station_en_2016 <- exercice %>%
filter (code_remarque == 1, year (date_prelevement) == 2016) %>%
group_by (libelle_station, code_station, code_prelevement) %>%
summarise (resultat_analyse = sum (resultat_analyse)) %>%
group_by (libelle_station) %>%
filter (resultat_analyse == max (resultat_analyse))
ungroup ()
View(taux_de_quantification)
pire_echantillon_par_station_en_2016 <- exercice %>%
filter (code_remarque == 1, year (date_prelevement) == 2016) %>%
group_by (code_prelevement) %>%
summarise (resultat_analyse = sum (resultat_analyse)) %>%
group_by (libelle_station) %>%
filter (resultat_analyse == max (resultat_analyse))
ungroup ()
pire_echantillon_par_station_en_2016 <- exercice %>%
filter (code_remarque == 1, year (date_prelevement) == 2016) %>%
group_by (code_prelevement) %>%
summarise (resultat_analyse = sum (resultat_analyse)) %>%
group_by (libelle_station) %>%
filter (resultat_analyse == max (resultat_analyse)) %>%
ungroup ()
libelle_station
pire_echantillon_par_station_en_2016 <- exercice %>%
filter (code_remarque == 1, year (date_prelevement) == 2016) %>%
group_by (libelle_station, code_prelevement) %>%
summarise (resultat_analyse = sum (resultat_analyse)) %>%
group_by (libelle_station) %>%
filter (resultat_analyse == max (resultat_analyse)) %>%
ungroup ()
View(pire_echantillon_par_station_en_2016)
pire_echantillon_par_station_en_2016 <- exercice %>%
filter (code_remarque == 1, year (date_prelevement) == 2016) %>%
group_by (libelle_station, code_prelevement) %>%
summarise (resultat_analyse = sum (resultat_analyse)) %>%
group_by (libelle_station) %>%
filter (concentration_tous_pesticides_cumules == max (resultat_analyse)) %>%
ungroup ()
pire_echantillon_par_station_en_2016 <- exercice %>%
filter (code_remarque == 1, year (date_prelevement) == 2016) %>%
group_by (libelle_station, code_prelevement) %>%
summarise (concentration_tous_pesticides_cumules = sum (resultat_analyse)) %>%
group_by (libelle_station) %>%
filter (concentration_tous_pesticides_cumules == max (resultat_analyse)) %>%
ungroup ()
pire_echantillon_par_station_en_2016 <- exercice %>%
filter (code_remarque == 1, year (date_prelevement) == 2016) %>%
group_by (libelle_station, code_prelevement) %>%
summarise (concentration_tous_pesticides_cumules = sum (resultat_analyse)) %>%
group_by (libelle_station) %>%
filter (concentration_tous_pesticides_cumules == max (concentration_tous_pesticides_cumules)) %>%
ungroup ()
View(pire_echantillon_par_station_en_2016)
pire_echantillon_par_station_en_2016 <- exercice %>%
filter (code_remarque == 1, year (date_prelevement) == 2016) %>%
group_by (libelle_station, code_prelevement) %>%
summarise (concentration_cumulee = sum (resultat_analyse)) %>%
group_by (libelle_station) %>%
filter (cconcentration_cumulee == max (concentration_cumulee)) %>%
ungroup ()
pire_echantillon_par_station_en_2016 <- exercice %>%
filter (code_remarque == 1, year (date_prelevement) == 2016) %>%
group_by (libelle_station, code_prelevement) %>%
summarise (concentration_cumulee = sum (resultat_analyse)) %>%
group_by (libelle_station) %>%
filter (concentration_cumulee == max (concentration_cumulee)) %>%
ungroup ()
library(bookdown)
getwd()
render_book ('index.Rmd')
install.packages("RcppRoll")
render_book ('index.Rmd')
install.packages("DBI")
render_book ('index.Rmd')
library(bookdown)
render_book ('index.Rmd')
install.packages("rsdmx")
render_book ('index.Rmd')
install.packages("RCurl")
render_book ('index.Rmd')
render_book ('index.Rmd')
rsconnect::setAccountInfo(name='ssm-ecologie',
+                           token='3751EAFFED45292C1FEE9252201672C1',
+                           secret='0jpb2H+89paB66BhqUnQrmBGZB0OFBCL6wW1XyZX')
rsconnect::setAccountInfo(name='ssm-ecologie',
token='3751EAFFED45292C1FEE9252201672C1',
secret='0jpb2H+89paB66BhqUnQrmBGZB0OFBCL6wW1XyZX')

select (qid, parent_qid, question, title) %>%
filter (parent_qid != "0") %>%
mutate (question = str_replace (question, '<span style="font-size:16px;">', ''),
question = str_replace (question, '</span>', '')) %>%
rename (sous_question = question) %>%
left_join (questions %>% select (qid, title), by = c('parent_qid' = 'qid')) %>%
mutate (title = paste0 (title.y, '.', title.x, '.')) %>%
select (-title.x, -title.y)
### chargement des réponses
reponses <- lsGetResponses(surveyID, languageCode = "fr")
reponses [reponses == ""] <- NA
reponses <- droplevels (reponses)
nom_vars_classt <- grep (pattern = "\\.\\d\\.$",x = names (reponses), value = TRUE)
data_classt <- reponses %>% select (nom_vars_classt)
data <- data_classt %>% select_at (vars (starts_with ('Q209ameliorposte')))
save.image("T:/Administration/FSU/sondage_en_ligne/traitements/v2/2018_10_01_donnees.pdf.RData")
install.packages("treemap")
install.packages("d3Tree")
# library
library(treemap)
# library
library(treemap)
install.packages("treemap")
install.packages("treemap")
View(data)
## par catégorie
obs_cat_nb <- reponses %>%
filter (! is.na (Q3categorie) & Q3categorie != 'Ne souhaite pas répondre'& Q3categorie != '') %>%
pull (Q3categorie) %>%
table ()
library (tidyverse)
## par catégorie
obs_cat_nb <- reponses %>%
filter (! is.na (Q3categorie) & Q3categorie != 'Ne souhaite pas répondre'& Q3categorie != '') %>%
pull (Q3categorie) %>%
table ()
obs_cat_prop <- obs_cat_nb / sum (obs_cat_nb)
pop_cat_nb <- c (130, 180, 96, 64) # d'après le bilan social du CGDD 2016
expected_cat_prop <- pop_cat_nb / sum (pop_cat_nb)
test_data <- cbind (obs_cat_nb, pop_cat_nb, obs_cat_prop, expected_cat_prop) %>%  as.data.frame ()
View (test_data)
chisq.test (x = test_data$obs_cat_nb, p = test_data$expected_cat_prop)
## Par genre
obs_genre_nb <- reponses %>%
filter (! is.na (Q0Genre) & Q0Genre != 'Ne souhaite pas répondre'& Q0Genre != '') %>%
pull (Q0Genre) %>%
table ()
obs_genre_prop <- obs_genre_nb / sum (obs_genre_nb)
pop_genre_nb <- c (217, 253) # d'après le bilan social du CGDD 2016
expected_genre_prop <- pop_genre_nb / sum (pop_genre_nb)
test_data <- cbind (obs_genre_nb, pop_genre_nb, obs_genre_prop, expected_genre_prop) %>%  as.data.frame ()
View (test_data)
chisq.test (x = test_data$obs_genre_nb, p = test_data$expected_genre_prop)
## Par genre
obs_geo_nb <- reponses %>%
filter (! is.na (Q4region) & Q4region != 'Ne souhaite pas répondre'& Q4region != '') %>%
pull (Q4region) %>%
table ()
## Par région
obs_geo_nb <- reponses %>%
filter (! is.na (Q4region) & Q4region != 'Ne souhaite pas répondre'& Q4region != '') %>%
pull (Q4region) %>%
table ()
obs_geo_prop <- obs_geo_nb / sum (obs_geo_nb)
pop_geo_nb <- c (358, (470-358)) # d'après le bilan social du CGDD 2016
expected_geo_prop <- pop_geo_nb / sum (pop_geo_nb)
test_data <- cbind (obs_geo_nb, pop_geo_nb, obs_geo_prop, expected_geo_prop) %>%  as.data.frame ()
View (test_data)
chisq.test (x = test_data$obs_geo_nb, p = test_data$expected_geo_prop)
rm (expected_cat_prop, expected_genre_prop, expected_geo_prop,
obs_cat_nb, obs_cat_prop, obs_genre_nb, obs_genre_prop,obs_geo_nb, obs_geo_prop,
pop_cat_nb, pop_genre_nb, pop_geo_nb, test_data)
?scale_y_continuous
library(likert)
?likert
df<-tribble(
~colA,~colB,~colC,~colD,
"A","B",12,123,
"A","B",10,121,
"A1","B2",2,13,
"D","G",12,123
)
library(tidyverse)
df<-tribble(
~colA,~colB,~colC,~colD,
"A","B",12,123,
"A","B",10,121,
"A1","B2",2,13,
"D","G",12,123
)
View(df)
df %>%
group_by(colA,colB) %>%
add_count() %>%
filter(n==1)
doublons <- duplicated (df,by=c(colA,colB))
doublons <- duplicated (df,by=c('colA','colB'))
?duplicated
x <- c(9:20, 1:5, 3:7, 0:8)
x
duplicated(iris)[140:143]
duplicated(iris)[14:143]
duplicated(iris)[14:145]
df
df<-tribble(
~colA,~colB,~colC,~colD,
"A","B",12,123,
"A","B",10,121,
"A1","B2",2,13,
"D","G",12,123,
"A","B",10,121
)
df %>%
group_by(colA,colB) %>%
add_count() %>%
filter(n==1)
df<-tribble(
~colA,~colB,~colC,~colD,
"A","B",12,123,
"A","B",10,121,
"A1","B2",2,13,
"D","G",12,123,
"A","B",10,121
)
df
df[!duplicated(df[,colA]),]
df[!duplicated(df[,"colA"]),]
df[!duplicated(df[,c("colA", "colB")]),]
df<-tribble(
~colA,~colB,~colC,~colD,
"A","B",12,123,
"A","B1",10,121,
"A1","B2",2,13,
"D","G",12,123,
"A","B",10,121
)
df %>%
group_by(colA,colB) %>%
add_count() %>%
filter(n==1)
df[!duplicated(df[,"colA"]),]
df[!duplicated(df[,c("colA", "colB")]),]
install.packages("sf")
library(sf)
dom <- "Y:/mapinfo/Eau/Eau_sout/bdlisa/v2_2018/reu_lisa_n2o1.tab"
10.9+16.5
library(bookdown)
getwd()
starwars %>% summarise_if(is.numeric, mean, na.rm = TRUE)
library(tidyverse)
library(bookdown)
starwars %>% summarise_if(is.numeric, mean, na.rm = TRUE)
dat <- read.csv (file = "Data/Base_synth_territoires.csv", sep = ';',
dec = ',', colClasses = c ("REG" = "factor")) %>%
select (-starts_with ("ET"))
setwd ('C:/Users/pirz/GitHub/parcours-r/m3_stats_desc/V3.2')
dat <- read.csv (file = "Data/Base_synth_territoires.csv", sep = ';',
dec = ',', colClasses = c ("REG" = "factor")) %>%
select (-starts_with ("ET"))
vec_ZAU <- pull (dat, ZAU)
levels(vec_ZAU) <- c("111 - Grand pôle",
"112 - Couronne GP",
"120 - Multipol grandes AU",
"211 - Moyen pôle",
"212 - Couronne MP" ,
"221 - Petit pôle",
"222 - Couronne PP",
"300 - Autre multipol.",
"400 - Commune isolée")
levels (vec_ZAU)
dat$ZAU2 <- vec_ZAU # création de la variable ZAU2 dans le data frame dat
d %>% summarise_if (is.numeric, mean, na.rm = TRUE)
dat %>% summarise_if (is.numeric, mean, na.rm = TRUE)
dat %>% summarise_if (is.numeric, mean, na.rm = TRUE) %>% View
dat %>% summarise_if (is.numeric, mean, na.rm = TRUE) %>% t() %>% View
render_book ('index.Rmd')
dat %>%
summarise_if (is.numeric, mean, na.rm = TRUE) %>%
t() %>%
datatable ()
?datatable
dat %>%
summarise_if (is.numeric, mean, na.rm = TRUE) %>%
t() %>%
datatable (rownames = FALSE, colnames = c('Variable', 'Moyenne'))
dat %>%
summarise_if (is.numeric, mean, na.rm = TRUE) %>%
t() %>%
datatable (rownames = TRUE, colnames = c('Variable', 'Moyenne'))
dat %>%
summarise_if (is.numeric, mean, na.rm = TRUE) %>%
round (digits = 2) %>%
t() %>%
datatable (rownames = TRUE, colnames = c('Variable', 'Moyenne'))
dat %>%
summarise_if (is.numeric, mean, na.rm = TRUE) %>%
round (digits = 2) %>%
t() %>%
datatable (rownames = TRUE, colnames = c('Variable', 'Moyenne'),
extensions = 'FixedColumns',
options = list(
dom = 't',
scrollX = TRUE,
scrollCollapse = TRUE
))
dat %>%
summarise_if (is.numeric, mean, na.rm = TRUE) %>%
round (digits = 2) %>%
t() %>%
datatable (rownames = TRUE, colnames = c('Variable', 'Moyenne'), width = 300)
render_book ('index.Rmd')
render_book ('index.Rmd')
dat %>%
summarise_at (c('P14_POP', 'SUPERF'), mean, na.rm = TRUE)
dat %>%
group_by (REG) %>%
summarise_at (c('P14_POP', 'SUPERF'), mean, na.rm = TRUE)
dat %>%
group_by (REG) %>%
summarise_at (c('P14_POP', 'SUPERF'), mean, na.rm = TRUE) %>%
datatable (width = 300)
dat %>%
group_by (REG) %>%
summarise_at (c('P14_POP', 'SUPERF'), mean, na.rm = TRUE) %>%
round (digits = 2) %>%
datatable (width = 300)
dat %>%
group_by (REG)
dat %>%
group_by (REG) %>%
summarise_at (c('P14_POP', 'SUPERF'), mean, na.rm = TRUE) %>%
mutate_if (is.numeric, round, digits = 2) %>%
datatable (width = 300)
dat %>%
group_by (REG) %>%
summarise_at (c('P14_POP', 'SUPERF'), mean, na.rm = TRUE) %>%
mutate_if (is.numeric, round, digits = 2) %>%
datatable (width = 500)
?getBreaks
render_book ('index.Rmd')
immo <- data.frame (nb_pieces = 1:7,
nb_apparts = c(38, 61, 92, 67, 43, 18, 5))
datable (immo, width = 500)
weighted.mean (x = immo$nb_pieces, w = immo$nb_apparts)
datatable (immo, width = 500)
datatable (immo, width = 500, colnames = c("Nombre de pièces", "Nombre d'appartements"))
datatable (immo, width = 500,
colnames = c("Nombre de pièces", "Nombre d'appartements"),
rownames = FALSE)
render_book ('index.Rmd')
names(dat)
summary(dat$ZE)
names(dat)
render_book ('index.Rmd')
?addmargins
tab <- select (dat, ZAU2, REG) %>%
filter (REG %in% c("11", "24", "27", "52")) %>%
droplevels () %>%
table ()
freq <- tab %>% prop.table() %>% round(digits = 3) * 100
addmargins (freq)
addmargins (freq, 1)
addmargins (freq, 2)
addmargins (freq, c(1,2))
dat4 <- dat %>%
filter (REG %in% c("11", "24", "27", "52"))
render_book ('index.Rmd')
render_book ('index.Rmd')
prov <- dat4 %>%
group_by (REG) %>%
summarise (pop_reg = sum (P14_POP, na.rm = T))
temp <- fct_reorder (prov$REG, -prov$pop_reg)
ggplot (data = dat4, aes (x = fct_relevel (REG, levels (temp)),
fill = ZAU2,
weight = P14_POP)) +
geom_bar (position = "stack")
prov
?reorder
ggplot (data = dat4, aes (x = fct_relevel (REG, levels (temp)),
fill = ZAU2,
weight = P14_POP)) +
geom_bar (position = "stack")
prov <- dat4 %>%
group_by (REG) %>%
summarise (pop_reg = sum (P14_POP, na.rm = T)) %>%
ungroup () %>%
mutate (REG = fct_reorder ($REG, -pop_reg))
prov <- dat4 %>%
group_by (REG) %>%
summarise (pop_reg = sum (P14_POP, na.rm = T)) %>%
ungroup () %>%
mutate (REG = fct_reorder (REG, -pop_reg))
View(prov)
levels (prov)
levels (prov$REG)
prov <- dat4 %>%
droplevels () %>%
group_by (REG) %>%
summarise (pop_reg = sum (P14_POP, na.rm = T)) %>%
ungroup () %>%
mutate (REG = fct_reorder (REG, -pop_reg))
levels (prov$REG)
temp <- fct_reorder (prov$REG, -prov$pop_reg)
temp
levels(temp)
render_book ('index.Rmd')
render_book("index.Rmd")
bookdown::render_book("index.Rmd")
bookdown::render_book("index.Rmd")
library (plyr)
library (tidyverse)
library (forcats)
library (lsr)
library (sp)
library (cartography)
library (GGally)
library (ggmosaic)
library (DT)
library (plotly)
dat <- read.csv (file = "Data/Base_synth_territoires.csv", sep = ';',
dec = ',', colClasses = c ("REG" = "factor")) %>%
select (-starts_with ("ET"))
str (dat)  # premier aperçu de la base
v <- c (12.5, 25.38, 14.9)
class (v)
v <- factor (x = c ("un peu", "beaucoup", "passionnément", "beaucoup",
"un peu", "un peu", "un peu"))
class (v)
levels (v)
v %>% table ()
as.integer (v) %>% table ()
d <- filter (dat, str_sub (string = ZAU, start = 1, end = 3) != "120")
# ou bien :
d <- filter (dat, ZAU != "111 - Grand pôle (plus de 10 000 emplois)")
d %>% pull (ZAU) %>% levels ()
d %>% pull (ZAU) %>% fct_drop () %>% levels ()
vec_ZAU <- pull (dat, ZAU)
levels(vec_ZAU) <- c("111 - Grand pôle",
"112 - Couronne GP",
"120 - Multipol grandes AU",
"211 - Moyen pôle",
"212 - Couronne MP" ,
"221 - Petit pôle",
"222 - Couronne PP",
"300 - Autre multipol.",
"400 - Commune isolée")
levels (vec_ZAU)
dat$ZAU2 <- vec_ZAU # création de la variable ZAU2 dans le data frame dat
dat <- dat %>%
mutate (DEP2 = fct_recode (DEP, "Ain" = "01", "Aisne" = "02"))
pull (dat, ZAU2) %>%
fct_recode (urbain = "111 - Grand pôle", urbain = "211 - Moyen pôle",
urbain = "221 - Petit pôle",
periurbain = "112 - Couronne GP", periurbain = "212 - Couronne MP",
periurbain = "120 - Multipol grandes AU", periurbain = "300 - Autre multipol.",
periurbain = "222 - Couronne PP",
rural = "400 - Commune isolée") %>%
fct_count ()
# renverser l'ordre
dat <- dat %>%
mutate (ZAU3 = fct_rev (ZAU2))
# ordonner "à la main"
dat <- dat %>%
mutate (ZAU3 = fct_relevel (ZAU2, "221 - Petit pôle", "111 - Grand pôle"))
# ordonner selon ordre d'apparition
dat <- dat %>%
mutate (ZAU3 = fct_inorder (ZAU2))
# ordonner selon la fréquence
dat <- dat %>%
mutate (ZAU3 = fct_infreq (ZAU2))
set.seed (123)
poids_sex <- data.frame (sex = factor (rep (c ("F", "M"), each = 200)),
poids = round (c (rnorm (200, mean = 55, sd = 5),
rnorm (200, mean = 65, sd = 5))))
library (grid)
# Histogramme basique
g <- ggplot (poids_sex, aes (x = poids)) + geom_histogram (binwidth = 1) +
geom_vline (aes (xintercept = mean (poids)),
color = "blue", linetype="dashed", size = 1) +
geom_vline (aes (xintercept = 53),
color = "green", linetype = "dashed", size = 1) +
geom_vline (aes (xintercept = 65),
color= "green", linetype = "dashed", size = 1) +
geom_segment (aes (x = min (poids_sex$poids), xend = max (poids_sex$poids), y = 1, yend = 1),
color = "orange", linetype = "dashed", size = 1,
arrow = arrow (length = unit(0.5, "cm"))) +
geom_segment (aes (x = max (poids_sex$poids), xend = min (poids_sex$poids), y = 1, yend = 1),
color = "orange", linetype = "dashed", size = 1,
arrow = arrow (length = unit(0.5, "cm"))) +
annotate (geom = "text", x = c (mean(poids_sex$poids) + 5, mean(poids_sex$poids) + 5, 55, 67),
y = c(25, 2, 15, 15), label = c ("Tendance centrale", "Dispersion", "Mode", "Mode"), colour = c("blue","orange", "green", "green")) +
ylab ("Fréquence")
g
library (grid)
# Histogramme basique
g <- ggplot (poids_sex, aes (x = poids)) + geom_histogram (binwidth = 1) +
geom_vline (aes (xintercept = mean (poids)),
color = "blue", linetype="dashed", size = 1) +
geom_vline (aes (xintercept = 53),
color = "green", linetype = "dashed", size = 1) +
geom_vline (aes (xintercept = 65),
color= "green", linetype = "dashed", size = 1) +
geom_segment (aes (x = min (poids_sex$poids), xend = max (poids_sex$poids), y = 1, yend = 1),
color = "orange", linetype = "dashed", size = 1,
arrow = arrow (length = unit(0.5, "cm"))) +
geom_segment (aes (x = max (poids_sex$poids), xend = min (poids_sex$poids), y = 1, yend = 1),
color = "orange", linetype = "dashed", size = 1,
arrow = arrow (length = unit(0.5, "cm"))) +
annotate (geom = "text", x = c (mean(poids_sex$poids) + 5, mean(poids_sex$poids) + 5, 55, 67),
y = c(25, 2, 15, 15), label = c ("Tendance centrale", "Dispersion", "Mode", "Mode"), colour = c("blue","orange", "green", "green")) +
ylab ("Fréquence")
g
vec_superf <- pull (dat, SUPERF)
median (vec_superf)
median (vec_superf, na.rm = T)
quantile (vec_superf, na.rm = T)
quantile (vec_superf, probs = c (0.05, 0.1, 0.25, 0.5, 0.75, 0.90, 0.95), na.rm = T)
q <- quantile (vec_superf, na.rm = T)
print (q)
q["75%"] - q["25%"]
IQR (vec_superf, na.rm = T)
mean (vec_superf, na.rm = T)
immo <- data.frame (nb_pieces = 1:7,
nb_apparts = c(38, 61, 92, 67, 43, 18, 5))
datatable (immo, width = 400,
colnames = c("Nombre de pièces", "Nombre d'appartements"),
rownames = FALSE)
weighted.mean (x = immo$nb_pieces, w = immo$nb_apparts)
Vd <- 100
Vf <- 100 * 1.12 * 1.04 * 1.07 * 0.98
Annees <- 4
taux_moyen_annuel <- (Vf / Vd) ^ (1 / Annees)
100 * taux_moyen_annuel ^ Annees # vérification
exp (mean (log (vec_superf), na.rm = T)) # alternative : l
etendue <- pull (dat, P14_RP_PROP) %>% range (na.rm = T) %>% round (0)
etendue
v <- pull (dat, P14_POP)
ecart_t <- sd (v, na.rm = T)
moy <- mean (v, na.rm = T)
ecart_t/moy
select (dat, P14_POP, SUPERF) %>% summary ()
dat %>%
summarise_if (is.numeric, mean, na.rm = TRUE) %>%
round (digits = 2) %>%
t() %>%
datatable (rownames = TRUE, colnames = c('Variable', 'Moyenne'), width = 300)
rlang::last_error()
dat %>%
summarise_if (is.numeric, mean, na.rm = TRUE)
dat %>%
summarise_if (is.numeric(), mean, na.rm = TRUE)
dat %>%
summarise_if (is.numeric(.), mean, na.rm = TRUE)
summary(dat)
dat %>%
summarise_if(is.numeric, mean, na.rm = TRUE)
dat %>%
summarise_if(is.integer, mean, na.rm = TRUE)
summarise_if(dat, is.numeric, mean, na.rm = TRUE)
dat %>%
summarise_at (c('P14_POP', 'SUPERF'), mean, na.rm = TRUE)
dat %>%
summarize_at (c('P14_POP', 'SUPERF'), mean, na.rm = TRUE)
summarize_if(dat, is.numeric, mean, na.rm = TRUE)
dat %>%
summarise(meanpop=mean(P14_POP), na.rm = TRUE)
dat %>%
summarise(meanpop=mean(P14_POP, na.rm = TRUE))
dat %>%
summarise_at (c('P14_POP', 'SUPERF'), mean, na.rm = TRUE)
dat %>%
summarise_at (vars(c('P14_POP', 'SUPERF')), mean, na.rm = TRUE)
dat %>%
summarise_at (vars(P14_POP, SUPERF)), mean, na.rm = TRUE)
dat %>%
summarise_at (vars(P14_POP, SUPERF), mean, na.rm = TRUE)
d %>%
summarise_at (c('P14_POP', 'SUPERF'), mean, na.rm = TRUE)
corse %>%
summarise_at (c('P14_POP', 'SUPERF'), mean, na.rm = TRUE)
dat %>%
summarise_if (is.numeric, mean, na.rm = TRUE) %>%
round (digits = 2) %>%
t() %>%
datatable (rownames = TRUE, colnames = c('Variable', 'Moyenne'), width = 300)
View(poids_sex)
poids_sex %>%
summarise_if (is.numeric, mean, na.rm = TRUE) %>%
round (digits = 2) %>%
t() %>%
datatable (rownames = TRUE, colnames = c('Variable', 'Moyenne'), width = 300)
install.packages(c("abctools", "ade4", "adegraphics", "ape", "aqp", "arm", "backports", "bit", "bold", "bookdown", "broom", "callr", "car", "carData", "caret", "cartogram", "cartography", "checkmate", "chron", "class", "classInt", "cli", "clipr", "coda", "codetools", "colorspace", "covr", "crul", "curl", "CVST", "d3heatmap", "data.table", "dbplyr", "ddalpha", "deldir", "dendextend", "descr", "devtools", "dimRed", "doBy", "doParallel", "dotCall64", "dplyr", "DRR", "DT", "e1071", "ellipse", "emmeans", "Epi", "etm", "eurostat", "FactoMineR", "fansi", "farver", "ff", "ffbase", "fields", "FNN", "forcats", "foreach", "foreign", "Formula", "formula.tools", "fpc", "FSA", "gam", "gcookbook", "geojson", "geojsonio", "geoR", "ggmap", "ggmosaic", "ggridges", "git2r", "glmmTMB", "googleVis", "gplots", "gsubfn", "gtools", "h2o", "haven", "hexbin", "HistData", "Hmisc", "htmlTable", "htmlwidgets", "httr", "igraph", "installr", "ipred", "irlba", "iterators", "janitor", "jomo", "jqr", "kernlab", "labelled", "later", "lattice", "lava", "lme4", "lmtest", "lwgeom", "magic", "manipulate", "mapdata", "mapproj", "MASS", "Matrix", "mclust", "mgcv", "mice", "microbenchmark", "miniUI", "missMDA", "mitml", "ModelMetrics", "modelr", "modeltools", "nanotime", "natserv", "nloptr", "NMF", "openair", "openssl", "packrat", "pacman", "PBSmapping", "pillar", "pkgbuild", "pkgconfig", "pkgmaker", "plotKML", "plotly", "plotrix", "polyclip", "prabclus", "PracTools", "prediction", "prettyR", "processx", "prodlim", "progress", "protolite", "ps", "psych", "purrr", "quantreg", "questionr", "R.oo", "R.utils", "randomForest", "raster", "RcppArmadillo", "RcppCCTZ", "RcppEigen", "readbitmap", "readr", "readxl", "recipes", "registry", "rentrez", "reprex", "reshape", "rgeos", "rgl", "RgoogleMaps", "rio", "ritis", "rJava", "rjson", "RJSONIO", "rlang", "RMySQL", "rncl", "robustbase", "rotl", "rpivotTable", "rredlist", "RSAGA", "rsconnect", "RSQLite", "rstudioapi", "rvcheck", "scatterplot3d", "selectr", "servr", "sf", "sfsmisc", "shiny", "shinythemes", "sjlabelled", "sjmisc", "sjstats", "sm", "solrium", "sourcetools", "spacetime", "spam", "spatstat", "spatstat.data", "spatstat.utils", "spData", "SSN", "stars", "stringr", "survey", "survival", "taxize", "testit", "testthat", "TH.data", "tibble", "tidyr", "tidyselect", "timeDate", "tinytex", "trimcluster", "tweenr", "units", "urltools", "UsingR", "V8", "vegan", "visNetwork", "WDI", "webshot", "wikitaxa", "worrms", "XLConnect", "XLConnectJars", "XML", "xtable"))
install.packages(c("abctools", "ade4", "adegraphics", "ape", "aqp", "arm", "backports", "bit", "bold", "bookdown", "broom", "callr", "car", "carData", "caret", "cartogram", "cartography", "checkmate", "chron", "class", "classInt", "cli", "clipr", "coda", "codetools", "colorspace", "covr", "crul", "curl", "CVST", "d3heatmap", "data.table", "dbplyr", "ddalpha", "deldir", "dendextend", "descr", "devtools", "dimRed", "doBy", "doParallel", "dotCall64", "dplyr", "DRR", "DT", "e1071", "ellipse", "emmeans", "Epi", "etm", "eurostat", "FactoMineR", "fansi", "farver", "ff", "ffbase", "fields", "FNN", "forcats", "foreach", "foreign", "Formula", "formula.tools", "fpc", "FSA", "gam", "gcookbook", "geojson", "geojsonio", "geoR", "ggmap", "ggmosaic", "ggridges", "git2r", "glmmTMB", "googleVis", "gplots", "gsubfn", "gtools", "h2o", "haven", "hexbin", "HistData", "Hmisc", "htmlTable", "htmlwidgets", "httr", "igraph", "installr", "ipred", "irlba", "iterators", "janitor", "jomo", "jqr", "kernlab", "labelled", "later", "lattice", "lava", "lme4", "lmtest", "lwgeom", "magic", "manipulate", "mapdata", "mapproj", "MASS", "Matrix", "mclust", "mgcv", "mice", "microbenchmark", "miniUI", "missMDA", "mitml", "ModelMetrics", "modelr", "modeltools", "nanotime", "natserv", "nloptr", "NMF", "openair", "openssl", "packrat", "pacman", "PBSmapping", "pillar", "pkgbuild", "pkgconfig", "pkgmaker", "plotKML", "plotly", "plotrix", "polyclip", "prabclus", "PracTools", "prediction", "prettyR", "processx", "prodlim", "progress", "protolite", "ps", "psych", "purrr", "quantreg", "questionr", "R.oo", "R.utils", "randomForest", "raster", "RcppArmadillo", "RcppCCTZ", "RcppEigen", "readbitmap", "readr", "readxl", "recipes", "registry", "rentrez", "reprex", "reshape", "rgeos", "rgl", "RgoogleMaps", "rio", "ritis", "rJava", "rjson", "RJSONIO", "rlang", "RMySQL", "rncl", "robustbase", "rotl", "rpivotTable", "rredlist", "RSAGA", "rsconnect", "RSQLite", "rstudioapi", "rvcheck", "scatterplot3d", "selectr", "servr", "sf", "sfsmisc", "shiny", "shinythemes", "sjlabelled", "sjmisc", "sjstats", "sm", "solrium", "sourcetools", "spacetime", "spam", "spatstat", "spatstat.data", "spatstat.utils", "spData", "SSN", "stars", "stringr", "survey", "survival", "taxize", "testit", "testthat", "TH.data", "tibble", "tidyr", "tidyselect", "timeDate", "tinytex", "trimcluster", "tweenr", "units", "urltools", "UsingR", "V8", "vegan", "visNetwork", "WDI", "webshot", "wikitaxa", "worrms", "XLConnect", "XLConnectJars", "XML", "xtable"))
install.packages(c("abctools", "ade4", "adegraphics", "ape", "aqp", "arm", "backports", "bit", "bold", "bookdown", "broom", "callr", "car", "carData", "caret", "cartogram", "cartography", "checkmate", "chron", "class", "classInt", "cli", "clipr", "coda", "codetools", "colorspace", "covr", "crul", "curl", "CVST", "d3heatmap", "data.table", "dbplyr", "ddalpha", "deldir", "dendextend", "descr", "devtools", "dimRed", "doBy", "doParallel", "dotCall64", "dplyr", "DRR", "DT", "e1071", "ellipse", "emmeans", "Epi", "etm", "eurostat", "FactoMineR", "fansi", "farver", "ff", "ffbase", "fields", "FNN", "forcats", "foreach", "foreign", "Formula", "formula.tools", "fpc", "FSA", "gam", "gcookbook", "geojson", "geojsonio", "geoR", "ggmap", "ggmosaic", "ggridges", "git2r", "glmmTMB", "googleVis", "gplots", "gsubfn", "gtools", "h2o", "haven", "hexbin", "HistData", "Hmisc", "htmlTable", "htmlwidgets", "httr", "igraph", "installr", "ipred", "irlba", "iterators", "janitor", "jomo", "jqr", "kernlab", "labelled", "later", "lattice", "lava", "lme4", "lmtest", "lwgeom", "magic", "manipulate", "mapdata", "mapproj", "MASS", "Matrix", "mclust", "mgcv", "mice", "microbenchmark", "miniUI", "missMDA", "mitml", "ModelMetrics", "modelr", "modeltools", "nanotime", "natserv", "nloptr", "NMF", "openair", "openssl", "packrat", "pacman", "PBSmapping", "pillar", "pkgbuild", "pkgconfig", "pkgmaker", "plotKML", "plotly", "plotrix", "polyclip", "prabclus", "PracTools", "prediction", "prettyR", "processx", "prodlim", "progress", "protolite", "ps", "psych", "purrr", "quantreg", "questionr", "R.oo", "R.utils", "randomForest", "raster", "RcppArmadillo", "RcppCCTZ", "RcppEigen", "readbitmap", "readr", "readxl", "recipes", "registry", "rentrez", "reprex", "reshape", "rgeos", "rgl", "RgoogleMaps", "rio", "ritis", "rJava", "rjson", "RJSONIO", "rlang", "RMySQL", "rncl", "robustbase", "rotl", "rpivotTable", "rredlist", "RSAGA", "rsconnect", "RSQLite", "rstudioapi", "rvcheck", "scatterplot3d", "selectr", "servr", "sf", "sfsmisc", "shiny", "shinythemes", "sjlabelled", "sjmisc", "sjstats", "sm", "solrium", "sourcetools", "spacetime", "spam", "spatstat", "spatstat.data", "spatstat.utils", "spData", "SSN", "stars", "stringr", "survey", "survival", "taxize", "testit", "testthat", "TH.data", "tibble", "tidyr", "tidyselect", "timeDate", "tinytex", "trimcluster", "tweenr", "units", "urltools", "UsingR", "V8", "vegan", "visNetwork", "WDI", "webshot", "wikitaxa", "worrms", "XLConnect", "XLConnectJars", "XML", "xtable"))
install.packages(c("abctools", "ade4", "adegraphics", "ape", "aqp", "arm", "backports", "bit", "bold", "bookdown", "broom", "callr", "car", "carData", "caret", "cartogram", "cartography", "checkmate", "chron", "class", "classInt", "cli", "clipr", "coda", "codetools", "colorspace", "covr", "crul", "curl", "CVST", "d3heatmap", "data.table", "dbplyr", "ddalpha", "deldir", "dendextend", "descr", "devtools", "dimRed", "doBy", "doParallel", "dotCall64", "dplyr", "DRR", "DT", "e1071", "ellipse", "emmeans", "Epi", "etm", "eurostat", "FactoMineR", "fansi", "farver", "ff", "ffbase", "fields", "FNN", "forcats", "foreach", "foreign", "Formula", "formula.tools", "fpc", "FSA", "gam", "gcookbook", "geojson", "geojsonio", "geoR", "ggmap", "ggmosaic", "ggridges", "git2r", "glmmTMB", "googleVis", "gplots", "gsubfn", "gtools", "h2o", "haven", "hexbin", "HistData", "Hmisc", "htmlTable", "htmlwidgets", "httr", "igraph", "installr", "ipred", "irlba", "iterators", "janitor", "jomo", "jqr", "kernlab", "labelled", "later", "lattice", "lava", "lme4", "lmtest", "lwgeom", "magic", "manipulate", "mapdata", "mapproj", "MASS", "Matrix", "mclust", "mgcv", "mice", "microbenchmark", "miniUI", "missMDA", "mitml", "ModelMetrics", "modelr", "modeltools", "nanotime", "natserv", "nloptr", "NMF", "openair", "openssl", "packrat", "pacman", "PBSmapping", "pillar", "pkgbuild", "pkgconfig", "pkgmaker", "plotKML", "plotly", "plotrix", "polyclip", "prabclus", "PracTools", "prediction", "prettyR", "processx", "prodlim", "progress", "protolite", "ps", "psych", "purrr", "quantreg", "questionr", "R.oo", "R.utils", "randomForest", "raster", "RcppArmadillo", "RcppCCTZ", "RcppEigen", "readbitmap", "readr", "readxl", "recipes", "registry", "rentrez", "reprex", "reshape", "rgeos", "rgl", "RgoogleMaps", "rio", "ritis", "rJava", "rjson", "RJSONIO", "rlang", "RMySQL", "rncl", "robustbase", "rotl", "rpivotTable", "rredlist", "RSAGA", "rsconnect", "RSQLite", "rstudioapi", "rvcheck", "scatterplot3d", "selectr", "servr", "sf", "sfsmisc", "shiny", "shinythemes", "sjlabelled", "sjmisc", "sjstats", "sm", "solrium", "sourcetools", "spacetime", "spam", "spatstat", "spatstat.data", "spatstat.utils", "spData", "SSN", "stars", "stringr", "survey", "survival", "taxize", "testit", "testthat", "TH.data", "tibble", "tidyr", "tidyselect", "timeDate", "tinytex", "trimcluster", "tweenr", "units", "urltools", "UsingR", "V8", "vegan", "visNetwork", "WDI", "webshot", "wikitaxa", "worrms", "XLConnect", "XLConnectJars", "XML", "xtable"))
install.packages(c("abctools", "ade4", "adegraphics", "ape", "aqp", "arm", "backports", "bit", "bold", "bookdown", "broom", "callr", "car", "carData", "caret", "cartogram", "cartography", "checkmate", "chron", "class", "classInt", "cli", "clipr", "coda", "codetools", "colorspace", "covr", "crul", "curl", "CVST", "d3heatmap", "data.table", "dbplyr", "ddalpha", "deldir", "dendextend", "descr", "devtools", "dimRed", "doBy", "doParallel", "dotCall64", "dplyr", "DRR", "DT", "e1071", "ellipse", "emmeans", "Epi", "etm", "eurostat", "FactoMineR", "fansi", "farver", "ff", "ffbase", "fields", "FNN", "forcats", "foreach", "foreign", "Formula", "formula.tools", "fpc", "FSA", "gam", "gcookbook", "geojson", "geojsonio", "geoR", "ggmap", "ggmosaic", "ggridges", "git2r", "glmmTMB", "googleVis", "gplots", "gsubfn", "gtools", "h2o", "haven", "hexbin", "HistData", "Hmisc", "htmlTable", "htmlwidgets", "httr", "igraph", "installr", "ipred", "irlba", "iterators", "janitor", "jomo", "jqr", "kernlab", "labelled", "later", "lattice", "lava", "lme4", "lmtest", "lwgeom", "magic", "manipulate", "mapdata", "mapproj", "MASS", "Matrix", "mclust", "mgcv", "mice", "microbenchmark", "miniUI", "missMDA", "mitml", "ModelMetrics", "modelr", "modeltools", "nanotime", "natserv", "nloptr", "NMF", "openair", "openssl", "packrat", "pacman", "PBSmapping", "pillar", "pkgbuild", "pkgconfig", "pkgmaker", "plotKML", "plotly", "plotrix", "polyclip", "prabclus", "PracTools", "prediction", "prettyR", "processx", "prodlim", "progress", "protolite", "ps", "psych", "purrr", "quantreg", "questionr", "R.oo", "R.utils", "randomForest", "raster", "RcppArmadillo", "RcppCCTZ", "RcppEigen", "readbitmap", "readr", "readxl", "recipes", "registry", "rentrez", "reprex", "reshape", "rgeos", "rgl", "RgoogleMaps", "rio", "ritis", "rJava", "rjson", "RJSONIO", "rlang", "RMySQL", "rncl", "robustbase", "rotl", "rpivotTable", "rredlist", "RSAGA", "rsconnect", "RSQLite", "rstudioapi", "rvcheck", "scatterplot3d", "selectr", "servr", "sf", "sfsmisc", "shiny", "shinythemes", "sjlabelled", "sjmisc", "sjstats", "sm", "solrium", "sourcetools", "spacetime", "spam", "spatstat", "spatstat.data", "spatstat.utils", "spData", "SSN", "stars", "stringr", "survey", "survival", "taxize", "testit", "testthat", "TH.data", "tibble", "tidyr", "tidyselect", "timeDate", "tinytex", "trimcluster", "tweenr", "units", "urltools", "UsingR", "V8", "vegan", "visNetwork", "WDI", "webshot", "wikitaxa", "worrms", "XLConnect", "XLConnectJars", "XML", "xtable"))
install.packages(c("abctools", "ade4", "adegraphics", "ape", "aqp", "arm", "backports", "bit", "bold", "bookdown", "broom", "callr", "car", "carData", "caret", "cartogram", "cartography", "checkmate", "chron", "class", "classInt", "cli", "clipr", "coda", "codetools", "colorspace", "covr", "crul", "curl", "CVST", "d3heatmap", "data.table", "dbplyr", "ddalpha", "deldir", "dendextend", "descr", "devtools", "dimRed", "doBy", "doParallel", "dotCall64", "dplyr", "DRR", "DT", "e1071", "ellipse", "emmeans", "Epi", "etm", "eurostat", "FactoMineR", "fansi", "farver", "ff", "ffbase", "fields", "FNN", "forcats", "foreach", "foreign", "Formula", "formula.tools", "fpc", "FSA", "gam", "gcookbook", "geojson", "geojsonio", "geoR", "ggmap", "ggmosaic", "ggridges", "git2r", "glmmTMB", "googleVis", "gplots", "gsubfn", "gtools", "h2o", "haven", "hexbin", "HistData", "Hmisc", "htmlTable", "htmlwidgets", "httr", "igraph", "installr", "ipred", "irlba", "iterators", "janitor", "jomo", "jqr", "kernlab", "labelled", "later", "lattice", "lava", "lme4", "lmtest", "lwgeom", "magic", "manipulate", "mapdata", "mapproj", "MASS", "Matrix", "mclust", "mgcv", "mice", "microbenchmark", "miniUI", "missMDA", "mitml", "ModelMetrics", "modelr", "modeltools", "nanotime", "natserv", "nloptr", "NMF", "openair", "openssl", "packrat", "pacman", "PBSmapping", "pillar", "pkgbuild", "pkgconfig", "pkgmaker", "plotKML", "plotly", "plotrix", "polyclip", "prabclus", "PracTools", "prediction", "prettyR", "processx", "prodlim", "progress", "protolite", "ps", "psych", "purrr", "quantreg", "questionr", "R.oo", "R.utils", "randomForest", "raster", "RcppArmadillo", "RcppCCTZ", "RcppEigen", "readbitmap", "readr", "readxl", "recipes", "registry", "rentrez", "reprex", "reshape", "rgeos", "rgl", "RgoogleMaps", "rio", "ritis", "rJava", "rjson", "RJSONIO", "rlang", "RMySQL", "rncl", "robustbase", "rotl", "rpivotTable", "rredlist", "RSAGA", "rsconnect", "RSQLite", "rstudioapi", "rvcheck", "scatterplot3d", "selectr", "servr", "sf", "sfsmisc", "shiny", "shinythemes", "sjlabelled", "sjmisc", "sjstats", "sm", "solrium", "sourcetools", "spacetime", "spam", "spatstat", "spatstat.data", "spatstat.utils", "spData", "SSN", "stars", "stringr", "survey", "survival", "taxize", "testit", "testthat", "TH.data", "tibble", "tidyr", "tidyselect", "timeDate", "tinytex", "trimcluster", "tweenr", "units", "urltools", "UsingR", "V8", "vegan", "visNetwork", "WDI", "webshot", "wikitaxa", "worrms", "XLConnect", "XLConnectJars", "XML", "xtable"))
install.packages(c("abctools", "ade4", "adegraphics", "ape", "aqp", "arm", "backports", "bit", "bold", "bookdown", "broom", "callr", "car", "carData", "caret", "cartogram", "cartography", "checkmate", "chron", "class", "classInt", "cli", "clipr", "coda", "codetools", "colorspace", "covr", "crul", "curl", "CVST", "d3heatmap", "data.table", "dbplyr", "ddalpha", "deldir", "dendextend", "descr", "devtools", "dimRed", "doBy", "doParallel", "dotCall64", "dplyr", "DRR", "DT", "e1071", "ellipse", "emmeans", "Epi", "etm", "eurostat", "FactoMineR", "fansi", "farver", "ff", "ffbase", "fields", "FNN", "forcats", "foreach", "foreign", "Formula", "formula.tools", "fpc", "FSA", "gam", "gcookbook", "geojson", "geojsonio", "geoR", "ggmap", "ggmosaic", "ggridges", "git2r", "glmmTMB", "googleVis", "gplots", "gsubfn", "gtools", "h2o", "haven", "hexbin", "HistData", "Hmisc", "htmlTable", "htmlwidgets", "httr", "igraph", "installr", "ipred", "irlba", "iterators", "janitor", "jomo", "jqr", "kernlab", "labelled", "later", "lattice", "lava", "lme4", "lmtest", "lwgeom", "magic", "manipulate", "mapdata", "mapproj", "MASS", "Matrix", "mclust", "mgcv", "mice", "microbenchmark", "miniUI", "missMDA", "mitml", "ModelMetrics", "modelr", "modeltools", "nanotime", "natserv", "nloptr", "NMF", "openair", "openssl", "packrat", "pacman", "PBSmapping", "pillar", "pkgbuild", "pkgconfig", "pkgmaker", "plotKML", "plotly", "plotrix", "polyclip", "prabclus", "PracTools", "prediction", "prettyR", "processx", "prodlim", "progress", "protolite", "ps", "psych", "purrr", "quantreg", "questionr", "R.oo", "R.utils", "randomForest", "raster", "RcppArmadillo", "RcppCCTZ", "RcppEigen", "readbitmap", "readr", "readxl", "recipes", "registry", "rentrez", "reprex", "reshape", "rgeos", "rgl", "RgoogleMaps", "rio", "ritis", "rJava", "rjson", "RJSONIO", "rlang", "RMySQL", "rncl", "robustbase", "rotl", "rpivotTable", "rredlist", "RSAGA", "rsconnect", "RSQLite", "rstudioapi", "rvcheck", "scatterplot3d", "selectr", "servr", "sf", "sfsmisc", "shiny", "shinythemes", "sjlabelled", "sjmisc", "sjstats", "sm", "solrium", "sourcetools", "spacetime", "spam", "spatstat", "spatstat.data", "spatstat.utils", "spData", "SSN", "stars", "stringr", "survey", "survival", "taxize", "testit", "testthat", "TH.data", "tibble", "tidyr", "tidyselect", "timeDate", "tinytex", "trimcluster", "tweenr", "units", "urltools", "UsingR", "V8", "vegan", "visNetwork", "WDI", "webshot", "wikitaxa", "worrms", "XLConnect", "XLConnectJars", "XML", "xtable"))
install.packages(c("tibble", "tidyr", "tidyselect"))
install.packages(c("tibble", "tidyr", "tidyselect"))
install.packages(c("tibble", "tidyr", "tidyselect"))
install.packages(c("tibble", "tidyr", "tidyselect"))
install.packages(c("tibble", "tidyr", "tidyselect"))
install.packages(c("tibble", "tidyr", "tidyselect"))
install.packages(c("abctools", "ade4", "adegraphics"))
install.packages(c("abctools", "ade4", "adegraphics", "ape", "aqp", "arm", "backports", "bit", "bold", "bookdown", "broom", "callr", "car", "carData", "caret", "cartogram", "cartography", "checkmate", "chron", "class", "classInt", "clipr", "coda", "codetools", "colorspace", "covr", "crul", "curl", "CVST", "d3heatmap", "data.table", "dbplyr", "ddalpha", "deldir", "dendextend", "descr", "devtools", "dimRed", "doBy", "doParallel", "dotCall64", "dplyr", "DRR", "DT", "e1071", "ellipse", "emmeans", "Epi", "etm", "eurostat", "FactoMineR", "farver", "ff", "ffbase", "fields", "FNN", "forcats", "foreach", "foreign", "Formula", "formula.tools", "fpc", "FSA", "gam", "gcookbook", "geojson", "geojsonio", "geoR", "ggmap", "ggmosaic", "ggridges", "git2r", "glmmTMB", "googleVis", "gplots", "gsubfn", "gtools", "h2o", "haven", "hexbin", "HistData", "Hmisc", "htmlTable", "htmlwidgets", "httr", "igraph", "installr", "ipred", "irlba", "iterators", "janitor", "jomo", "jqr", "kernlab", "labelled", "later", "lattice", "lava", "lme4", "lmtest", "lwgeom", "magic", "manipulate", "mapdata", "mapproj", "MASS", "Matrix", "mclust", "mgcv", "mice", "microbenchmark", "miniUI", "missMDA", "mitml", "ModelMetrics", "modelr", "modeltools", "nanotime", "natserv", "nloptr", "NMF", "openair", "openssl", "packrat", "pacman", "PBSmapping", "pkgbuild", "pkgmaker", "plotKML", "plotly", "plotrix", "polyclip", "prabclus", "PracTools", "prediction", "prettyR", "processx", "prodlim", "progress", "protolite", "ps", "psych", "purrr", "quantreg", "questionr", "R.oo", "R.utils", "randomForest", "raster", "RcppArmadillo", "RcppCCTZ", "RcppEigen", "readbitmap", "readr", "readxl", "recipes", "registry", "rentrez", "reprex", "reshape", "rgeos", "rgl", "RgoogleMaps", "rio", "ritis", "rJava", "rjson", "RJSONIO", "RMySQL", "rncl", "robustbase", "rotl", "rpivotTable", "rredlist", "RSAGA", "rsconnect", "RSQLite", "rstudioapi", "rvcheck", "scatterplot3d", "selectr", "servr", "sf", "sfsmisc", "shiny", "shinythemes", "sjlabelled", "sjmisc", "sjstats", "sm", "solrium", "sourcetools", "spacetime", "spam", "spatstat", "spatstat.data", "spatstat.utils", "spData", "SSN", "stars", "stringr", "survey", "survival", "taxize", "testit", "testthat", "TH.data", "timeDate", "tinytex", "trimcluster", "tweenr", "units", "urltools", "UsingR", "V8", "vegan", "visNetwork", "WDI", "webshot", "wikitaxa", "worrms", "XLConnect", "XLConnectJars", "XML", "xtable"))
dat %>%
summarise_if (is.numeric, mean, na.rm = TRUE) %>%
round (digits = 2) %>%
t() %>%
datatable (rownames = TRUE, colnames = c('Variable', 'Moyenne'), width = 300)
library(tidyverse)
